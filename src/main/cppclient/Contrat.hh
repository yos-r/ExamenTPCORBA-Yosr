// This file is generated by omniidl (C++ backend)- omniORB_4_3. Do not edit.
#ifndef __Contrat_hh__
#define __Contrat_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_Contrat
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_Contrat
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_Contrat
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif



_CORBA_MODULE Contrat

_CORBA_MODULE_BEG

  class StringSequence_var;

  class StringSequence : public _CORBA_Unbounded_Sequence_String {
  public:
    typedef StringSequence_var _var_type;
    inline StringSequence() {}
    inline StringSequence(const StringSequence& _s)
      : _CORBA_Unbounded_Sequence_String(_s) {}

    inline StringSequence(_CORBA_ULong _max)
      : _CORBA_Unbounded_Sequence_String(_max) {}
    inline StringSequence(_CORBA_ULong _max, _CORBA_ULong _len, char** _val, _CORBA_Boolean _rel=0)
      : _CORBA_Unbounded_Sequence_String(_max, _len, _val, _rel) {}

  

    inline StringSequence& operator = (const StringSequence& _s) {
      _CORBA_Unbounded_Sequence_String::operator=(_s);
      return *this;
    }
  };

  class StringSequence_out;

  class StringSequence_var {
  public:
    inline StringSequence_var() : _pd_seq(0) {}
    inline StringSequence_var(StringSequence* _s) : _pd_seq(_s) {}
    inline StringSequence_var(const StringSequence_var& _s) {
      if (_s._pd_seq)  _pd_seq = new StringSequence(*_s._pd_seq);
      else             _pd_seq = 0;
    }
    inline ~StringSequence_var() { if (_pd_seq)  delete _pd_seq; }
      
    inline StringSequence_var& operator = (StringSequence* _s) {
      if (_pd_seq)  delete _pd_seq;
      _pd_seq = _s;
      return *this;
    }
    inline StringSequence_var& operator = (const StringSequence_var& _s) {
      if (&_s != this) {
        if (_s._pd_seq) {
          if (!_pd_seq)  _pd_seq = new StringSequence;
          *_pd_seq = *_s._pd_seq;
        }
        else if (_pd_seq) {
          delete _pd_seq;
          _pd_seq = 0;
        }
      }
      return *this;
    }
    inline _CORBA_String_element operator [] (_CORBA_ULong _s) {
      return (*_pd_seq)[_s];
    }

  

    inline StringSequence* operator -> () { return _pd_seq; }
    inline const StringSequence* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
    inline operator StringSequence& () const { return *_pd_seq; }
#else
    inline operator const StringSequence& () const { return *_pd_seq; }
    inline operator StringSequence& () { return *_pd_seq; }
#endif
      
    inline const StringSequence& in() const { return *_pd_seq; }
    inline StringSequence&       inout()    { return *_pd_seq; }
    inline StringSequence*&      out() {
      if (_pd_seq) { delete _pd_seq; _pd_seq = 0; }
      return _pd_seq;
    }
    inline StringSequence* _retn() { StringSequence* tmp = _pd_seq; _pd_seq = 0; return tmp; }
      
    friend class StringSequence_out;
    
  private:
    StringSequence* _pd_seq;
  };

  class StringSequence_out {
  public:
    inline StringSequence_out(StringSequence*& _s) : _data(_s) { _data = 0; }
    inline StringSequence_out(StringSequence_var& _s)
      : _data(_s._pd_seq) { _s = (StringSequence*) 0; }
    inline StringSequence_out(const StringSequence_out& _s) : _data(_s._data) {}
    inline StringSequence_out& operator = (const StringSequence_out& _s) {
      _data = _s._data;
      return *this;
    }
    inline StringSequence_out& operator = (StringSequence* _s) {
      _data = _s;
      return *this;
    }
    inline operator StringSequence*&()  { return _data; }
    inline StringSequence*& ptr()       { return _data; }
    inline StringSequence* operator->() { return _data; }

    inline _CORBA_String_element operator [] (_CORBA_ULong _i) {
      return (*_data)[_i];
    }

  

    StringSequence*& _data;

  private:
    StringSequence_out();
    StringSequence_out& operator=(const StringSequence_var&);
  };

#ifndef __Contrat_mEtudiant__
#define __Contrat_mEtudiant__
  class Etudiant;
  class _objref_Etudiant;
  class _impl_Etudiant;
  
  typedef _objref_Etudiant* Etudiant_ptr;
  typedef Etudiant_ptr EtudiantRef;

  class Etudiant_Helper {
  public:
    typedef Etudiant_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_Etudiant, Etudiant_Helper> Etudiant_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_Etudiant,Etudiant_Helper > Etudiant_out;

#endif

  // interface Etudiant
  class Etudiant {
  public:
    // Declarations for this interface type.
    typedef Etudiant_ptr _ptr_type;
    typedef Etudiant_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static inline _ptr_type _fromObjRef(omniObjRef* o) {
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_Etudiant :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    // IDL operations
    void Ajouter_une_epreuve(const char* nom, ::CORBA::Double note, ::CORBA::Double coefficient);
    StringSequence* Liste_des_epreuves();
    StringSequence* Liste_des_livres();
    ::CORBA::Double Calculer_la_moyenne();
    void Emprunter_un_livre(const char* nom, const char* auteur, const char* collection, const char* datePublication);

    // Constructors
    inline _objref_Etudiant()  { _PR_setobj(0); }  // nil
    _objref_Etudiant(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_Etudiant();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_Etudiant(const _objref_Etudiant&);
    _objref_Etudiant& operator = (const _objref_Etudiant&);
    // not implemented

    friend class Etudiant;
  };

  class _pof_Etudiant : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_Etudiant() : _OMNI_NS(proxyObjectFactory)(Etudiant::_PD_repoId) {}
    virtual ~_pof_Etudiant();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_Etudiant :
    public virtual omniServant
  {
  public:
    virtual ~_impl_Etudiant();

    virtual void Ajouter_une_epreuve(const char* nom, ::CORBA::Double note, ::CORBA::Double coefficient) = 0;
    virtual StringSequence* Liste_des_epreuves() = 0;
    virtual StringSequence* Liste_des_livres() = 0;
    virtual ::CORBA::Double Calculer_la_moyenne() = 0;
    virtual void Emprunter_un_livre(const char* nom, const char* auteur, const char* collection, const char* datePublication) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


#ifndef __Contrat_mPromotion__
#define __Contrat_mPromotion__
  class Promotion;
  class _objref_Promotion;
  class _impl_Promotion;
  
  typedef _objref_Promotion* Promotion_ptr;
  typedef Promotion_ptr PromotionRef;

  class Promotion_Helper {
  public:
    typedef Promotion_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_Promotion, Promotion_Helper> Promotion_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_Promotion,Promotion_Helper > Promotion_out;

#endif

  // interface Promotion
  class Promotion {
  public:
    // Declarations for this interface type.
    typedef Promotion_ptr _ptr_type;
    typedef Promotion_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static inline _ptr_type _fromObjRef(omniObjRef* o) {
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_Promotion :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    // IDL operations
    void ajouter_un_etudiant(const char* nom, const char* prenom, ::CORBA::Long numero);
    Etudiant_ptr rechercher_un_etudiant(::CORBA::Long numero);
    ::CORBA::Double calculer_moyenne_de_la_promotion();

    // Constructors
    inline _objref_Promotion()  { _PR_setobj(0); }  // nil
    _objref_Promotion(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_Promotion();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_Promotion(const _objref_Promotion&);
    _objref_Promotion& operator = (const _objref_Promotion&);
    // not implemented

    friend class Promotion;
  };

  class _pof_Promotion : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_Promotion() : _OMNI_NS(proxyObjectFactory)(Promotion::_PD_repoId) {}
    virtual ~_pof_Promotion();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_Promotion :
    public virtual omniServant
  {
  public:
    virtual ~_impl_Promotion();

    virtual void ajouter_un_etudiant(const char* nom, const char* prenom, ::CORBA::Long numero) = 0;
    virtual Etudiant_ptr rechercher_un_etudiant(::CORBA::Long numero) = 0;
    virtual ::CORBA::Double calculer_moyenne_de_la_promotion() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


_CORBA_MODULE_END



_CORBA_MODULE POA_Contrat
_CORBA_MODULE_BEG

  class Etudiant :
    public virtual Contrat::_impl_Etudiant,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~Etudiant();

    inline ::Contrat::Etudiant_ptr _this() {
      return (::Contrat::Etudiant_ptr) _do_this(::Contrat::Etudiant::_PD_repoId);
    }
  };

  class Promotion :
    public virtual Contrat::_impl_Promotion,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~Promotion();

    inline ::Contrat::Promotion_ptr _this() {
      return (::Contrat::Promotion_ptr) _do_this(::Contrat::Promotion::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_Contrat
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr



inline void
Contrat::Etudiant::_marshalObjRef(::Contrat::Etudiant_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}

inline void
Contrat::Promotion::_marshalObjRef(::Contrat::Promotion_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}



#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_Contrat
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_Contrat
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_Contrat
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_Contrat
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_Contrat
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_Contrat
#endif

#endif  // __Contrat_hh__

